@model RecordStore.Data.EF.Genre

@{
    ViewBag.Title = "Edit Genre: " + Model.GenreName;
}

<div id="rrWrapper">
    <h2 class="text-center mb-4">@ViewBag.Title</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.GenreID)

            <div class="form-group">
                <div class="col-md-7 text-center m-auto pb-4">
                    @Html.LabelFor(model => model.GenreName, "Genre Name", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.GenreName, new { htmlAttributes = new { @class = "form-control text-center" } })
                    @Html.ValidationMessageFor(model => model.GenreName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-7 text-center m-auto">
                    <input type="submit" value="Save Changes" class="btn btn-dark" />
                    @Html.ActionLink("Delete", "Delete", new { id = Model.GenreID }, new { @class = "btn btn-dark" })
                    <a href="javascript:void(0);" onclick="history.go(-1);" class="btn btn-dark">Cancel</a>
                    @*@Html.ActionLink("Cancel", "Index", "Genre", null, new { @class = "btn btn-dark" })*@
                </div>
            </div>
        </div>
    }
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
