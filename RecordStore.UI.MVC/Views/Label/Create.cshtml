@model RecordStore.Data.EF.Label

@{
    ViewBag.Title = "Create A New Label";
}

<div id="rrWrapper">
    <h2 class="text-center mb-4">@ViewBag.Title</h2>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-7 text-center m-auto">
                @Html.LabelFor(model => model.LabelName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.LabelName, new { htmlAttributes = new { @class = "form-control text-center" } })
                @Html.ValidationMessageFor(model => model.LabelName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-7 text-center m-auto">
                @Html.LabelFor(model => model.Country, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Country, new { htmlAttributes = new { @class = "form-control text-center" } })
                @Html.ValidationMessageFor(model => model.Country, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group text-center">
            @Html.LabelFor(model => model.IsStillDistributing, htmlAttributes: new { @class = "control-label" })
            <div class="checkbox">
                @*@Html.EditorFor(model => model.IsStillDistributing)*@
                @Html.CheckBoxFor(model => model.IsStillDistributing, new { data_toggle = "toggle", data_on = "Yes", data_off = "No" })
                @Html.ValidationMessageFor(model => model.IsStillDistributing, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group text-center m-auto">
            <div class="col-md-12">
                <input type="submit" value="Create" class="btn btn-dark" />
                @Html.ActionLink("Cancel", "Index", "Label", null, new { @class = "btn btn-dark" })
            </div>
        </div>
    </div>
    }
</div>


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
