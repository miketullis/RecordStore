@*@model IEnumerable<RecordStore.Data.EF.Artist>*@
@model PagedList.IPagedList<RecordStore.Data.EF.Artist>
@using PagedList.Mvc


@{
    ViewBag.Title = "Artists";
}


<div id="rrWrapper">

    <h2> @ViewBag.Title</h2>

    @*Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount*@

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))

    @using (Html.BeginForm("Index", "Artist", FormMethod.Get))
    {
        <p style="padding-bottom: 1em; font-weight: bold;">
            <input type="text" name="searchString" style="max-width:250px;" />
            <input type="submit" value="Search" />
            &nbsp;&nbsp;
            @if (User.IsInRole("Admin"))
            {

                @Html.ActionLink("Add A New Artist", "Create")
            }

        </p>
    }


    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().ArtistName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().IsStillActive)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.ArtistName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsStillActive)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.ArtistID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.ArtistID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.ArtistID })
                </td>
            </tr>
        }

    </table>
</div>