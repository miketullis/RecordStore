@model IEnumerable<RecordStore.Data.EF.Artist>
@using RecordStore.UI.MVC.Helpers

@{
    ViewBag.Title = "Artists";
}

<div id="rrWrapper">
    <h2 class="text-center"> @ViewBag.Title</h2>
    <br />
    <table class="table" id="myTable">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().ArtistName)
                </th>
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.FirstOrDefault().IsStillActive)
                </th>
                <th class="text-right">@Html.ActionLink("Add A New Artist", "Create")</th>
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @*@Html.DisplayFor(modelItem => item.ArtistName)*@
                        @* Use reformatted ArtistName for ABC displaying *@
                        @Html.DisplayFor(modelItem => item.ArtistNameSort)
                    </td>


                    <td class="text-center">
                        @if (item.IsStillActive == true)
                        {<span>Yes</span>}
                        else
                        { <span>No</span>}
                    </td>
                    <td class="text-right">
                        @Html.ActionLink("Edit", "Edit", new { id = item.ArtistID }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ArtistID }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ArtistID })
                    </td>
                </tr>
            }
        </tbody>
    </table>


    @* Placeholders for the creating, deleting, & editing Departments in a dialog box *@
    <div id="ArtistCreate"></div>
    <div id="ArtistDelete"></div>
    <div id="ArtistEdit"></div>
</div>

@section Scripts{
    <script>
        $(document).ready(function () {
            $('#myTable').DataTable();
        });
    </script>
}