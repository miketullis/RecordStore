@model RecordStore.Data.EF.Album

@{
    ViewBag.Title = "Details | " + @Model.AlbumName;
}

<div id="rrWrapper">
    <div class="row">
        <div class="col-md-5 pr-5">
            <img src="~/Content/assets/images/albumImages/@Model.AlbumImage" alt="@Model.AlbumName Cover" title="@Model.AlbumName Cover" id="albumArt" class="albumArtBG mb-5" />
        </div>

        <div class="col-md-7">
            <dl class="dl-horizontal">
                <dd>
                    <h2>@Html.DisplayFor(model => model.AlbumName)</h2>
                </dd>
                <hr />
                <dd>
                    @foreach (var artist in Model.AlbumArtist)
                    {
                        if (artist.PrimaryArtist != null)
                        {
                            if ((bool)artist.PrimaryArtist)
                            {
                                <div>
                                    <span style="font-weight: bold;">
                                        Artist@(Model.AlbumArtist.Count == 1 ? ":" : "s:" )
                                    </span>
                                    @artist.Artist.ArtistName
                                </div>
                            }
                        }
                    }
                    <div style="word-wrap: normal;">
                        @if (Model.AlbumArtist.Count > 1)
                        {
                            <span>Featuring: </span>
                        }
                        @foreach (var artist in Model.AlbumArtist.OrderBy(x => x.Artist.ArtistName))
                        {
                            if ((bool)artist.PrimaryArtist == false)
                            {
                                if (Model.AlbumArtist.ToList().IndexOf(artist) == Model.AlbumArtist.Count - 1)
                                {
                                    @artist.Artist.ArtistName
                                }
                                else
                                {
                                    @artist.Artist.ArtistName<span>, </span>
                                }
                            }
                        }
                    </div>
                </dd>
                <dd>
                    <span class="font-weight-bold">Year:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.Year)
                </dd>
                <dd>
                    <span class="font-weight-bold">Format:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.Num) @Html.DisplayFor(model => model.Format.FormatType)@(Model.Num == 1 ? "" : "s")
                    @(Model.Tracks >= 1 ? ", " : " ") @Html.DisplayFor(model => model.Tracks)
                    @(Model.Tracks == 1 ? "Track" : Model.Tracks > 1 ? "Tracks" : "" ) @*ternary operator to display track info*@
                </dd>
                <dd>
                    <div style="word-wrap: normal;">
                        <span class="font-weight-bold">Recording Type:&nbsp;&nbsp;</span>
                        @foreach (var recording in Model.AlbumRecording)
                        {
                            if (Model.AlbumRecording.ToList().IndexOf(recording) == Model.AlbumRecording.Count - 1)
                            {
                                @recording.Recording.RecordingType
                            }
                            else
                            {
                                @recording.Recording.RecordingType<span>, </span>
                            }

                        }
                    </div>
                </dd>
                <dd>
                    <div style="word-wrap: normal;">
                        <span class="font-weight-bold">Genre:&nbsp;&nbsp;</span>
                        @foreach (var genre in Model.AlbumGenre.OrderBy(x => x.Genre.GenreName))
                        {
                            if (Model.AlbumGenre.ToList().IndexOf(genre) == Model.AlbumGenre.Count - 1)
                            {
                                @genre.Genre.GenreName
                            }
                            else
                            {
                                @genre.Genre.GenreName<span>, </span>
                            }

                        }
                    </div>
                </dd>
                <dd>
                    <span class="font-weight-bold">Label:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.Label.LabelName)
                </dd>
                <dd>
                    <span class="font-weight-bold">Catalog No.:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.CatalogNum)
                </dd>
                <dd>
                    <span class="font-weight-bold">Country:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.Label.Country)
                </dd>
                <hr />
                <dd>
                    <span class="font-weight-bold">Units In Stock:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.UnitsInStock)
                </dd>
                <dd>
                    <span class="font-weight-bold">Status:&nbsp;&nbsp;</span>
                    @Html.DisplayFor(model => model.AlbumStatus.AlbumStatusName)
                </dd>

                @if (Model.CompilationAlbum == true)
                {
                    <dd>
                        <span class="font-weight-bold">Compilation:&nbsp;&nbsp;</span>
                        <span>Yes</span>
                    </dd>
                }
                @if (Model.IsInPrint == false)
                {
                    <dd>
                        <span class="font-weight-bold">Availability:&nbsp;&nbsp;</span>
                        <span>Out Of Print</span>
                    </dd>
                }
                <hr />
                <dt>
                    @Html.DisplayNameFor(model => model.Description):
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <hr />
                <dt>
                    @Html.DisplayNameFor(model => model.Price):
                </dt>
                <dd>
                    <h3>@Html.DisplayFor(model => model.Price)</h3>
                </dd>
            </dl>
        </div>
    </div>
    <div class="col-md-12 pt-3">
        @* "Add To Cart" functionality *@
        @using (Html.BeginForm("AddToCart", "Album", new { albumID = Model.AlbumID }, FormMethod.Post))
        {
            if (Model.UnitsInStock == 0)
            {
                <div>
                    <input value="Currently Unavailible" class="btn btn-danger" />
                </div>
            }
            else
            {
                @Html.HiddenFor(a => a.AlbumID)
                <span class="label">Quantity: </span>
                @Html.TextBox("qty", 1, new { @class = "form-control text-center", @style = "max-width: 45px; display: inline; position:relative; bottom: 4px;", onkeyup = "checkQty()" })
                <div id="btnSubmit" class="d-inline">
                    <input type="submit" value="Add To Cart" class="btn btn-dark" />
                </div>
            }
            <a href="javascript:void(0);" onclick="history.go(-1);" class="btn btn-dark">Return</a>
            if (User.IsInRole("Admin"))
            {
                <span></span>@Html.ActionLink("Edit", "Edit", new { id = Model.AlbumID }, new { @class = "btn btn-dark" })
                <span></span>@Html.ActionLink("Delete", "Delete", new { id = Model.AlbumID }, new { @class = "btn btn-dark" })
            }
        }
    </div>
</div>


@section scripts{
    <script>
        //On page load, store the units in stock as a JS variable for use in the function
        let uis = @Model.UnitsInStock;

        //Use some JS for this since it's dependent upon the user typing in the quantity for the cart.  The function fires onkeyup -  after someone types something into the textbox for quantity, this function executes
        function checkQty() {
            //textbox value
            //alert("Check QTY")
            let qty = document.getElementById("qty").value;
            console.log(uis);
            console.log(Qty);

            //div surrounding button - use this to modify innerHTML depending on stock QTY
            let btnDiv = document.getElementById("btnSubmit");
            if (uis >= qty) {
                 btnDiv.innerHTML='<input type="submit" value="Add To Cart" class="btn btn-dark" />';
            }
            else
            {
            btnDiv.innerHTML='<span class="text-danger">Insufficient quantity in stock.<br/> Please select a lower quantity, or choose a different title.</span>';
            }
        }
    </script>
}