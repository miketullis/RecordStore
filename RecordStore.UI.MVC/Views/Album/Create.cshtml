@model RecordStore.Data.EF.Album


@{
    ViewBag.Title = "Create A New Album";
}

<div id="rrWrapper">
    <h3>@ViewBag.title</h3>
    <br />

    @using (Html.BeginForm("Create", "Album", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.AlbumName, "Album Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AlbumName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AlbumName, "", new { @class = "text-danger" })
            </div>
        </div>



        @*Artist Info Dropdown...Still needs work, and restyling*@
        
        <div class="form-group col-md-10">
            <label class="control-label">Artist</label>
            <div class="selectBox" onclick="showArtists()">
                <select>
                    <option>Album Artist(s)</option>
                </select>
                <div class="overSelect"></div>
            </div>

            @*Link to trigger ArtistCreate dialog box
            TODO - figure out why not opening partial view,
            may need to use JSON to display newly created artist without reload  *@
            <a href="" class="ArtistCreate">Need A New Artist?</a>

            <div id="checkArtists">
                @foreach (RecordStore.Data.EF.Artist artist in ViewBag.Artist)
                {
                    <label>
                        <span>@artist.ArtistName </span>
                        <input type="checkbox" name="artists" value="@artist.ArtistID" />

                        @*TODO - make user able to select of atist is a primamry artist on the alumn or not.  Currently causing NULL values in DB *@

                        @*- Main:
                              <input type="checkbox" name="primaryArtists" value="@albumArtist.PrimaryArtist" />

                        <div class="checkbox">
                                  @Html.EditorFor(model => model.AlbumArtist.PrimaryArtist)
                              </div>*@
                    </label>
                }
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.LabelID, "Label", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("LabelID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.LabelID, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CatalogNum, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CatalogNum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CatalogNum, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.ReleaseYear, "Release Year", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ReleaseYear, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReleaseYear, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Num, "No. of CDs/LPs/Etc...", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Num, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Num, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Tracks, "No. of Tracks", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Tracks, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Tracks, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    <label class="control-label">Genre</label>
                    <div class="selectBox" onclick="showGenres()">
                        <select>
                            <option>Genre(s)</option>
                        </select>
                        <div class="overSelect"></div>
                    </div>
                    <div id="checkGenres">
                        @foreach (RecordStore.Data.EF.Genre genre in ViewBag.Genre)
                        {
                            <label>
                                <span>@genre.GenreName </span>
                                <input type="checkbox" name="genres" value="@genre.GenreID" />
                            </label>
                        }
                    </div>
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.FormatID, "Format", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("FormatID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FormatID, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.AlbumStatusID, "Status", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("AlbumStatusID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.AlbumStatusID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="row">
                <div class="col-md-3">
                    @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-3">
                    @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.CompilationAlbum, "Compilation", htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.CompilationAlbum)
                        @Html.ValidationMessageFor(model => model.CompilationAlbum, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-md-2">
                    @Html.LabelFor(model => model.IsInPrint, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsInPrint)
                        @Html.ValidationMessageFor(model => model.IsInPrint, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        @*TODO figure out why AlbumImage is not loading default image when user does upload an image*@
        <div class="form-group">
            @Html.LabelFor(model => model.AlbumImage, "Album Cover", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="albumCover" />
                @Html.ValidationMessageFor(model => model.AlbumImage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create New Ablum" class="btn btn-dark" />
                @Html.ActionLink("Cancel", "Index", "Album", null, new { @class = "btn btn-dark" })
            </div>
        </div>
    </div>
    }

</div>


@* Placeholder for the creating a new artist in a dialog box *@
<div id="ArtistCreate"></div>

@* Placeholder for the creating a new genre in a dialog box *@
<div id="GenreCreate"></div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>
        var expanded = false;

        function showArtists() {
            var checkArtists = document.getElementById("checkArtists");
            if (!expanded) {
                checkArtists.style.display = "block";
                expanded = true;
            } else {
                checkArtists.style.display = "none";
                expanded = false;
            }
        }

        function showGenres() {
            var checkGernes = document.getElementById("checkGenres");
            if (!expanded) {
                checkGenres.style.display = "block";
                expanded = true;
            } else {
                checkGenres.style.display = "none";
                expanded = false;
            }
        }








        //TODO  Clean Up Script...may not need of this...Partial view not loading!!

        //*********** AJAX ARTIST CREATE DIALOG/POP-UP BOX ************//
        $('a.ArtistCreate').click(function (e) {
            e.preventDefault(); //Prevents the default behavior. Here, reloading the page.
            $("#ArtistCreate")
                .dialog({
                    width: 400,
                    height: 200,
                    open: function () {
                        $(this).load("~/Views/Artist/ArtistCreate.cshtml");
                    },
                    title: "Add New Artist",
                    modal: true,
                    resizable: false
                }); //End dialog box for the div
        }); //End details button click event handler


        $("#ArtistCreateForm").submit(function (e) {
            var formData = $(this).serializeArray();
            console.log(formData);
            e.preventDefault(); //Prevent the default page reload on submit

            $.ajax({
                url: "~/Views/Artist/AjaxCreate.cshtml",
                type: "POST",
                data: formData,
                dataType: "json",
                error: function (e) {
                    $("#MessageContent").html("<div class='alert alert-danger'>There was a problem.</div>");
                },
                success: function (foo) {
                    $("#MessageContent").html("<div class='alert alert-success'>Record added successfully.</div>");
                    $("#ArtistCreateForm")[0].reset();
                    $(function () {
                        var row = '<tr><td>' + foo.ArtistName
                            + '</td><td>' + (foo.IsStillActive
                                ? '<input type="checkbox" disabled="disabled" checked="checked" />'
                                : '<input type="checkbox" disabled="disabled" />'
                            ) //End ternary to assign bool as a checkbox
                            + '</td><td>Refresh to view options</td></tr>';
                        $("#ArtistTable").append(row);
                    }); //End of build & append row functionality
                } //End success
            }); //End Ajax form submission properties
        }); //End form submit event handler

    </script>

























    </script>
}
