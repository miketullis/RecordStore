@model RecordStore.Data.EF.Album

@{
    ViewBag.Title = "Create A New Album";
}

<div id="rrWrapper">
    <h3 class="text-center">@ViewBag.title</h3>
    <br />
    @using (Html.BeginForm("Create", "Album", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.AlbumID)

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.AlbumName, "Album Name", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.AlbumName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AlbumName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-12">
                <label class="control-label">Artist</label>
                <a style="float:right;" href="" class="ArtistCreate">Need A New Artist?</a>
                <div class="selectBox" onclick="showArtists()">
                    <select style="color:#888B7D;">
                        <option>Select Album Artist(s)</option>
                    </select>
                    <div class="overSelect"></div>
                </div>
                <ul id="checkArtists">
                    @foreach (RecordStore.Data.EF.Artist artist in ViewBag.Artist)
                    {
                        <li>
                            <div class="row">
                                <div class="col-md-4">
                                    <input type="checkbox" name="artists" value="@artist.ArtistID" />
                                    <span>&nbsp;@artist.ArtistName</span>
                                </div>
                                <div class="col-md-4">
                                    <input type="radio" name="primaryArtistID" value="@artist.ArtistID" />
                                    <span style="font-size:12px; font-weight:400;">&nbsp;Primary Artist</span>
                                </div>
                            </div>
                        </li>
                    }
                </ul>
            </div>


            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.LabelID, "Label", htmlAttributes: new { @class = "control-label" })
                `                <a style="float:right;" href="" class="LabelCreate">Need A New Label?</a>
                <div>
                    @Html.DropDownList("LabelID", null, "", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LabelID, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.CatalogNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.CatalogNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CatalogNum, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Year, "Release Year", htmlAttributes: new { @class = "control-label", })
                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Num, "No. of CDs/LPs/Etc.", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Num, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Num, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Tracks, "No. of Tracks", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Tracks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Tracks, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-4">
                        <label class="control-label">Genre</label>
                        <div class="selectBox" onclick="showGenres()">
                            <select style="color:#888B7D;">
                                <option>Select Genre(s)</option>
                            </select>
                            <div class="overSelect"></div>
                        </div>
                        <ul id="checkGenres">
                            @foreach (RecordStore.Data.EF.Genre genre in ViewBag.Genre)
                            {
                                <li class="col-md-12">
                                    <input type="checkbox" name="genres" value="@genre.GenreID" />
                                    <span>&nbsp;@genre.GenreName</span>
                                </li>
                            }
                        </ul>
                    </div>

                    <div class="col-md-4">
                        @Html.LabelFor(model => model.FormatID, "Format", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("FormatID", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FormatID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.AlbumStatusID, "Status", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("AlbumStatusID", null, "", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AlbumStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-4">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CompilationAlbum, "Compilation", htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.CompilationAlbum)
                            @Html.ValidationMessageFor(model => model.CompilationAlbum, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="col-md-2">
                        @Html.LabelFor(model => model.IsInPrint, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsInPrint)
                            @Html.ValidationMessageFor(model => model.IsInPrint, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AlbumImage, "Album Cover", htmlAttributes: new { @class = "control-label" })
                <div class="col-md-12">
                    <input type="file" name="albumCover" />
                    @Html.ValidationMessageFor(model => model.AlbumImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-12">
                    <input type="submit" value="Create New Album" class="btn btn-dark" />
                    @Html.ActionLink("Cancel", "Index", "Album", null, new { @class = "btn btn-dark" })
                </div>
            </div>
        </div>
    }

    @* Placeholders for the creating a new Artist & Label in a dialog box *@
    <div id="ArtistCreate"></div>
    <div id="LabelCreate"></div>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var expanded = false;

        function showArtists() {
            var checkArtists = document.getElementById("checkArtists");
            if (!expanded) {
                checkArtists.style.display = "block";
                expanded = true;
            } else {
                checkArtists.style.display = "none";
                expanded = false;
            }
        }

        function showGenres() {
            var checkGenres = document.getElementById("checkGenres");
            if (!expanded) {
                checkGenres.style.display = "block";
                expanded = true;
            } else {
                checkGenres.style.display = "none";
                expanded = false;
            }
        }

        //*********** AJAX ARTIST CREATE DIALOG/POP-UP BOX ************//
        $('a.ArtistCreate').click(function (e) {
            e.preventDefault();
            $("#ArtistCreate")
                .dialog({
                    width: 450,
                    height: 250,
                    open: function () {
                        $(this).load("/Album/ArtistCreate");
                    },
                    title: "Create New Artist",
                    modal: true,
                    resizable: false
                }); //End dialog box for the div
        }); //End details button click event handler


        //*********** AJAX LABEL CREATE DIALOG/POP-UP BOX ************//
        $('a.LabelCreate').click(function (e) {
            e.preventDefault();
            $("#LabelCreate")
                .dialog({
                    width: 450,
                    height: 350,
                    open: function () {
                        $(this).load("/Album/LabelCreate");
                    },
                    title: "Create New Label",
                    modal: true,
                    resizable: false
                }); //End dialog box for the div
        }); //End details button click event handler
    </script>
}
