@model RecordStore.Data.EF.Album


@{
    ViewBag.Title = "Create A New Album";
}



<div id="rrWrapper">

    <h3>@ViewBag.title</h3>
    <br />

    @using (Html.BeginForm("Create", "Album", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.AlbumName, "Album Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.AlbumName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.AlbumName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-10">
                <label class="control-label">Artist</label>
                <div class="selectBox" onclick="showArtists()">
                    <select>
                        <option>Album Artist(s)</option>
                    </select>
                    <div class="overSelect"></div>
                </div>
                <div id="checkArtists">
                    @foreach (RecordStore.Data.EF.Artist artist in ViewBag.Artist)
                    {
                        <label>
                            <span>@artist.ArtistName </span>
                            <input type="checkbox" name="artists" value="@artist.ArtistID" />

                            @*- Main
                            <input type="checkbox" name="primaryArtists" value="@albumArtist.PrimaryArtist" />*@

                                @*<div class="checkbox">
                                    @Html.EditorFor(model => model.AlbumArtist.PrimaryArtist)
                                </div>*@
                        </label>
                    }
                </div>
            </div>



            <div class="form-group">
                @Html.LabelFor(model => model.LabelID, "Label", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("LabelID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.LabelID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.CatalogNum, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.CatalogNum, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CatalogNum, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.ReleaseYear, "Release Year", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.ReleaseYear, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ReleaseYear, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Num, "No. of CDs/LPs/Etc...", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Num, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Num, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Tracks, "No. of Tracks", htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Tracks, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Tracks, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        <label class="control-label">Genre</label>
                        <div class="selectBox" onclick="showGenres()">
                            <select>
                                <option>Genre(s)</option>
                            </select>
                            <div class="overSelect"></div>
                        </div>
                        <div id="checkGenres">
                            @foreach (RecordStore.Data.EF.Genre genre in ViewBag.Genre)
                            {
                                <label>
                                    <span>@genre.GenreName </span>
                                    <input type="checkbox" name="genres" value="@genre.GenreID" />
                                </label>
                            }
                        </div>
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.FormatID, "Format", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("FormatID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FormatID, "", new { @class = "text-danger" })
                    </div>
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.AlbumStatusID, "Status", htmlAttributes: new { @class = "control-label" })
                        @Html.DropDownList("AlbumStatusID", null, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.AlbumStatusID, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="row">
                    <div class="col-md-3">
                        @Html.LabelFor(model => model.UnitsInStock, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.UnitsInStock, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UnitsInStock, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-3">
                        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label" })
                        @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.CompilationAlbum, "Compilation", htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.CompilationAlbum)
                            @Html.ValidationMessageFor(model => model.CompilationAlbum, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="col-md-2">
                        @Html.LabelFor(model => model.IsInPrint, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsInPrint)
                            @Html.ValidationMessageFor(model => model.IsInPrint, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.AlbumImage, "Album Cover", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" name="albumCover" />
                    @Html.ValidationMessageFor(model => model.AlbumImage, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create New Ablum" class="btn btn-dark" />
                    @Html.ActionLink("Cancel", "Index", "Album", null, new { @class = "btn btn-dark" })
                </div>
            </div>
        </div>
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")


    <script>
        var expanded = false;

        function showArtists() {
            var checkArtists = document.getElementById("checkArtists");
            if (!expanded) {
                checkArtists.style.display = "block";
                expanded = true;
            } else {
                checkArtists.style.display = "none";
                expanded = false;
            }
        }

        function showGenres() {
            var checkGernes = document.getElementById("checkGenres");
            if (!expanded) {
                checkGenres.style.display = "block";
                expanded = true;
            } else {
                checkGenres.style.display = "none";
                expanded = false;
            }
        }

    </script>
}
