@model RecordStore.Data.EF.Employee

@{
    ViewBag.Title = "Employee Details: " + @Model.FullName;
}

<div id="rrWrapper">
    <h2 class="text-center">@ViewBag.Title</h2>

    <div class="dl-horizontal">
        <div class="row text-center mx-auto details">
            <div class="col-md-6 pt-5 col-xl-4 offset-xl-2">
                <h4>Company Info:</h4>
                <hr />
                <div class="font-weight-bold">
                    Department
                </div>
                <div>
                    @Html.DisplayFor(model => model.Department.DepartmentName)
                </div>
                <div class="font-weight-bold">
                    @Html.DisplayNameFor(model => model.Position)
                </div>
                <div>
                    @Html.DisplayFor(model => model.Position)
                </div>
                <div class="font-weight-bold">
                    Pay Rate
                </div>
                <div>
                    @Html.DisplayFor(model => model.PayRate)
                </div>
                <div class="font-weight-bold">
                    @Html.DisplayNameFor(model => model.IsFullTime)
                </div>
                <div>
                    @*@Html.DisplayFor(model => model.IsFullTime)*@

                    @if (Model.IsFullTime == true)
                    { <span>Yes</span>}
                    else
                    { <span>No</span>}
                </div>
                <div class="font-weight-bold">
                    Hire Date
                </div>
                <div>
                    @*@Html.DisplayFor(model => model.HireDate)*@
                    @{string formattedHire = Model.HireDate.HasValue ? Model.HireDate.Value.ToString("MMMM d, yyyy") : "<not available>"; }
                    @Html.DisplayFor(model => formattedHire)
                </div>

                @if (Model.Employee2 != null)
                { 
                <div class="font-weight-bold">
                Reports To
                </div>
                <div>
                    @Html.DisplayFor(model => model.Employee2.NamePlusPosition)
                </div>
                }
            </div>

            <div class="col-md-6 pt-5 col-xl-4">
                <h4>Personal Info:</h4>
                <hr />
                <div class="font-weight-bold">
                    @Html.DisplayNameFor(model => model.Address)
                </div>
                <div>
                    @Html.DisplayFor(model => model.Address)<br />
                    @Html.DisplayFor(model => model.City),&nbsp;
                    @Html.DisplayFor(model => model.State)&nbsp;
                    @Html.DisplayFor(model => model.ZipCode)
                </div>
                <div class="font-weight-bold">
                    @Html.DisplayNameFor(model => model.Phone)
                </div>
                <div>
                    @Html.DisplayFor(model => model.Phone)
                </div>
                <div class="font-weight-bold">
                    @Html.DisplayNameFor(model => model.Birthday)
                </div>
                <div>
                    @*@Html.DisplayFor(model => model.Birthday)*@
                    @{string formattedBday = Model.Birthday.HasValue ? Model.Birthday.Value.ToString("MMMM d, yyyy") : "<not available>"; }
                    @Html.DisplayFor(model => formattedBday)
                </div>
            </div>
        </div>
    </div>
    <div class=" col-md-10 text-center m-auto pt-4">
        @Html.ActionLink("Edit", "Edit", new { id = Model.EmployeeID }, new { @class = "btn btn-dark" })
        @Html.ActionLink("Delete", "Delete", new { id = Model.EmployeeID }, new { @class = "btn btn-dark" })
        @Html.ActionLink("Return", "Index", null, new { @class = "btn btn-dark" })
    </div>
</div>
