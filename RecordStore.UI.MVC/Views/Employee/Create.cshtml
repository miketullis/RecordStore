@model RecordStore.Data.EF.Employee

@{
    ViewBag.Title = "Add A New Employee";
}


<div id="rrWrapper">
    <h2 class="text-center">@ViewBag.Title</h2>
    <br />

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-12">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.State, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.State, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", placeholder = "xxx-xxx-xxxx" } })
                    @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control", placeholder = "mm-dd-yyyy" } })
                    @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-4">
                    @Html.LabelFor(model => model.HireDate, "Hire Date", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.HireDate, new { htmlAttributes = new { @class = "form-control", placeholder = "mm-dd-yyyy" } })
                    @Html.ValidationMessageFor(model => model.HireDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.Position, htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.Position, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Position, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.PayRate, "Pay Rate", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.PayRate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PayRate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.IsFullTime, htmlAttributes: new { @class = "control-label" })
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsFullTime)
                        @Html.ValidationMessageFor(model => model.IsFullTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.DepartmentID, "Department", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("DepartmentID", null, "", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })
                </div>
                <div class="form-group col-md-6">
                    @Html.LabelFor(model => model.DirectReportID, "Directly Reports To", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("DirectReportID", null, "", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DirectReportID, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    }

    <div>
        <input type="submit" value="Create" class="btn btn-dark" /> &nbsp;
        @Html.ActionLink("Cancel", "Index", "Employee", null, new { @class = "btn btn-dark" })
    </div>

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
